name: Release Tools

run-name: Release by @${{ github.actor }}

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-tools"
      
jobs:
  build:
    name: Building
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.1.11
      with:
        versionSpec: '6.0.x'

    - name: Determine Version
      id: version_step # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v3.1.11

    - name: Display GitVersion
      run: echo "FullSemVer (env.fullSemVer) ${{ env.fullSemVer }}"
    
    - name: Restore dependencies
      run: |
        dotnet restore ./Source/ScriptDeployTools.Targets.SqlServer/ScriptDeployTools.Targets.SqlServer.csproj
        dotnet restore ./Source/ScriptDeployTools.Sources.Embedded/ScriptDeployTools.Sources.Embedded.csproj
    
    - name: Build
      run: |
        dotnet build ./Source/ScriptDeployTools.Targets.SqlServer/ScriptDeployTools.Targets.SqlServer.csproj --no-restore --configuration Release
        dotnet build ./Source/ScriptDeployTools.Sources.Embedded/ScriptDeployTools.Sources.Embedded.csproj --no-restore --configuration Release

    - name: Pack to NuGet
      run: |
        dotnet pack ./Source/ScriptDeployTools.Targets.SqlServer/ScriptDeployTools.Targets.SqlServer.csproj --no-restore --no-build --output nupkgs -p:PackageVersion=${{ env.fullSemVer }}
        dotnet pack ./Source/ScriptDeployTools.Sources.Embedded/ScriptDeployTools.Sources.Embedded.csproj --no-restore --no-build --output nupkgs -p:PackageVersion=${{ env.fullSemVer }}

    - name: Push to NuGet
      run: dotnet nuget push ./nupkgs/ScriptDeployTools.*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_TOKEN}
      env:
        NUGET_API_TOKEN: ${{ secrets.NUGET_API_TOKEN }}
